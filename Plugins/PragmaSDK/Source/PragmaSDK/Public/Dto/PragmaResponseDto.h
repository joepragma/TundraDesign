// <auto-generated>
//      Generated by Pragma Platform protoc-custom-plugins sdk-unreal4 target.  DO NOT EDIT!
//      Source template: unreal4/Dto.h.mustache
// </auto-generated>
#pragma once

#include "CoreMinimal.h"
#include "Dom/JsonObject.h"
#include "Dto/PragmaErrorsExtDto.h"
#include "Dto/PragmaTypesDto.h"
#include "Dto/PragmaErrorsDto.h"
#include "Dto/PragmaOptionsDto.h"

#include "PragmaResponseDto.generated.h"

// Forward declarations.
struct FPragma_ServiceError;

//
// Source protos:
// pragma/response.proto
//


//
// Enums.
//

UENUM(BlueprintType, Category=Pragma)
enum class EPragma_ResponseStatusCode : uint8
{
	ERROR_UNKNOWN = 0,
	INTERNAL_ERROR = 1,
	OK = 2,
	SERVICE_ERROR = 3,
	SHUTTING_DOWN = 4,
	BAD_SESSION = 5,
	BAD_PARAM = 6,
};

//
// Messages.
//

UENUM(BlueprintType, Category=Pragma)
enum class EPragma_ServiceError_ErrorTypeType : uint8
{
	Invalid,
	Error,
	ExtError,
};

USTRUCT(BlueprintType, Category=Pragma)
struct PRAGMASDK_API FPragma_ServiceError_ErrorType
{
	GENERATED_BODY()

	FPragma_ServiceError_ErrorType();
	~FPragma_ServiceError_ErrorType();

	FPragma_ServiceError_ErrorType(const FPragma_ServiceError_ErrorType& Other);
	FPragma_ServiceError_ErrorType& operator=(const FPragma_ServiceError_ErrorType& Other);

    bool Equals(const FPragma_ServiceError_ErrorType& Other) const;

	void Reset();

	EPragma_ServiceError_ErrorTypeType OneOfType() const { return Type; }

	const EPragma_PlatformError& Error() const;
	const EPragma_ExtError& ExtError() const;

    void SetError(const EPragma_PlatformError& Value);
    void SetExtError(const EPragma_ExtError& Value);

	static bool SerializeIntoParentJson(const void* Value, TSharedRef<FJsonObject>& OutJsonObj);
	static bool DeserializeFromParentJson(const TSharedRef<FJsonObject>& JsonObj, void* OutValue);

private:
	UPROPERTY()
	EPragma_ServiceError_ErrorTypeType Type { EPragma_ServiceError_ErrorTypeType::Invalid };

	union
	{
		TTypeCompatibleBytes<EPragma_PlatformError> Error;
		TTypeCompatibleBytes<EPragma_ExtError> ExtError;
	} Union{};
};
bool operator==(const FPragma_ServiceError_ErrorType& Lhs, const FPragma_ServiceError_ErrorType& Rhs);
bool operator!=(const FPragma_ServiceError_ErrorType& Lhs, const FPragma_ServiceError_ErrorType& Rhs);

USTRUCT(BlueprintType, Category=Pragma)
struct FPragma_ServiceError
{
	GENERATED_BODY()

	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category=Pragma)
	int32 RequestId{0};

	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category=Pragma)
	EPragma_ResponseStatusCode Status{static_cast<EPragma_ResponseStatusCode>(0)};

	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category=Pragma)
	FString TraceId;

	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category=Pragma)
	TArray<FString> DebugDetails;

	UPROPERTY(Transient)
	FPragma_ServiceError_ErrorType ErrorType;

    PRAGMASDK_API static bool AddonSerializer(const void* Value, TSharedRef<FJsonObject>& OutJsonObj);
    PRAGMASDK_API static bool AddonDeserializer(const TSharedRef<FJsonObject>& JsonObj, void* OutValue);
};
PRAGMASDK_API bool operator==(const FPragma_ServiceError& Lhs, const FPragma_ServiceError& Rhs);
PRAGMASDK_API bool operator!=(const FPragma_ServiceError& Lhs, const FPragma_ServiceError& Rhs);

