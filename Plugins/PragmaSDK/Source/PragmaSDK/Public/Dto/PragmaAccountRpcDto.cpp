// <auto-generated>
//      Generated by Pragma Platform protoc-custom-plugins sdk-unreal4 target.  DO NOT EDIT!
//      Source template: unreal4/Dto.cpp.mustache
// </auto-generated>

#include "PragmaAccountRpcDto.h"
#include "CoreMinimal.h"
#include "PragmaJson.h"



bool operator==(const FPragma_Account_RemoveAccountFromPlayerGroupPartnerV1Response& Lhs, const FPragma_Account_RemoveAccountFromPlayerGroupPartnerV1Response& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.PlayerGroupIds == Rhs.PlayerGroupIds
;
}
bool operator!=(const FPragma_Account_RemoveAccountFromPlayerGroupPartnerV1Response& Lhs, const FPragma_Account_RemoveAccountFromPlayerGroupPartnerV1Response& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_RemoveAccountFromPlayerGroupPartnerV1Request& Lhs, const FPragma_Account_RemoveAccountFromPlayerGroupPartnerV1Request& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.PlayerGroupId == Rhs.PlayerGroupId
			&& Lhs.PragmaSocialId == Rhs.PragmaSocialId
;
}
bool operator!=(const FPragma_Account_RemoveAccountFromPlayerGroupPartnerV1Request& Lhs, const FPragma_Account_RemoveAccountFromPlayerGroupPartnerV1Request& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_AddAccountToPlayerGroupPartnerV1Response& Lhs, const FPragma_Account_AddAccountToPlayerGroupPartnerV1Response& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.PlayerGroupIds == Rhs.PlayerGroupIds
;
}
bool operator!=(const FPragma_Account_AddAccountToPlayerGroupPartnerV1Response& Lhs, const FPragma_Account_AddAccountToPlayerGroupPartnerV1Response& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_AddAccountToPlayerGroupPartnerV1Request& Lhs, const FPragma_Account_AddAccountToPlayerGroupPartnerV1Request& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.PlayerGroupId == Rhs.PlayerGroupId
			&& Lhs.PragmaSocialId == Rhs.PragmaSocialId
;
}
bool operator!=(const FPragma_Account_AddAccountToPlayerGroupPartnerV1Request& Lhs, const FPragma_Account_AddAccountToPlayerGroupPartnerV1Request& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_GetPragmaAccountOverviewsPartnerV1Response& Lhs, const FPragma_Account_GetPragmaAccountOverviewsPartnerV1Response& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.Accounts == Rhs.Accounts
			&& Lhs.Count == Rhs.Count
;
}
bool operator!=(const FPragma_Account_GetPragmaAccountOverviewsPartnerV1Response& Lhs, const FPragma_Account_GetPragmaAccountOverviewsPartnerV1Response& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_UpdateEmailV1Response& Lhs, const FPragma_Account_UpdateEmailV1Response& Rhs)
{
	return true // Initial true allows simpler codegen.
;
}
bool operator!=(const FPragma_Account_UpdateEmailV1Response& Lhs, const FPragma_Account_UpdateEmailV1Response& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_UpdateEmailV1Request& Lhs, const FPragma_Account_UpdateEmailV1Request& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.EmailAddress == Rhs.EmailAddress
;
}
bool operator!=(const FPragma_Account_UpdateEmailV1Request& Lhs, const FPragma_Account_UpdateEmailV1Request& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_UpdateDisplayNameV1Response& Lhs, const FPragma_Account_UpdateDisplayNameV1Response& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.UpdatedDisplayName == Rhs.UpdatedDisplayName
;
}
bool operator!=(const FPragma_Account_UpdateDisplayNameV1Response& Lhs, const FPragma_Account_UpdateDisplayNameV1Response& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_UpdateDisplayNameV1Request& Lhs, const FPragma_Account_UpdateDisplayNameV1Request& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.RequestedDisplayName == Rhs.RequestedDisplayName
;
}
bool operator!=(const FPragma_Account_UpdateDisplayNameV1Request& Lhs, const FPragma_Account_UpdateDisplayNameV1Request& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_GetAccountV1Request& Lhs, const FPragma_Account_GetAccountV1Request& Rhs)
{
	return true // Initial true allows simpler codegen.
;
}
bool operator!=(const FPragma_Account_GetAccountV1Request& Lhs, const FPragma_Account_GetAccountV1Request& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_RemoveAccountTagsRequest& Lhs, const FPragma_Account_RemoveAccountTagsRequest& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.PragmaSocialIds == Rhs.PragmaSocialIds
			&& Lhs.AccountTagIds == Rhs.AccountTagIds
;
}
bool operator!=(const FPragma_Account_RemoveAccountTagsRequest& Lhs, const FPragma_Account_RemoveAccountTagsRequest& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_RemoveAccountTagsPartnerV1Request& Lhs, const FPragma_Account_RemoveAccountTagsPartnerV1Request& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.Request == Rhs.Request
;
}
bool operator!=(const FPragma_Account_RemoveAccountTagsPartnerV1Request& Lhs, const FPragma_Account_RemoveAccountTagsPartnerV1Request& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_AddAccountTagsRequest& Lhs, const FPragma_Account_AddAccountTagsRequest& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.PragmaSocialIds == Rhs.PragmaSocialIds
			&& Lhs.AccountTags == Rhs.AccountTags
;
}
bool operator!=(const FPragma_Account_AddAccountTagsRequest& Lhs, const FPragma_Account_AddAccountTagsRequest& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_AddAccountTagsPartnerV1Request& Lhs, const FPragma_Account_AddAccountTagsPartnerV1Request& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.Request == Rhs.Request
;
}
bool operator!=(const FPragma_Account_AddAccountTagsPartnerV1Request& Lhs, const FPragma_Account_AddAccountTagsPartnerV1Request& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_GetAccountTagsPartnerV1Request& Lhs, const FPragma_Account_GetAccountTagsPartnerV1Request& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.PragmaSocialIds == Rhs.PragmaSocialIds
;
}
bool operator!=(const FPragma_Account_GetAccountTagsPartnerV1Request& Lhs, const FPragma_Account_GetAccountTagsPartnerV1Request& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_ViewTagsPartnerV1Request& Lhs, const FPragma_Account_ViewTagsPartnerV1Request& Rhs)
{
	return true // Initial true allows simpler codegen.
;
}
bool operator!=(const FPragma_Account_ViewTagsPartnerV1Request& Lhs, const FPragma_Account_ViewTagsPartnerV1Request& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_IdProviderDisplayNameSearch& Lhs, const FPragma_Account_IdProviderDisplayNameSearch& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.IdProvider == Rhs.IdProvider
			&& Lhs.FullDisplayName == Rhs.FullDisplayName
;
}
bool operator!=(const FPragma_Account_IdProviderDisplayNameSearch& Lhs, const FPragma_Account_IdProviderDisplayNameSearch& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_PlayerSearchFilter& Lhs, const FPragma_Account_PlayerSearchFilter& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.AccountTagIds == Rhs.AccountTagIds
			&& Lhs.ExcludedPlayerGroupIds == Rhs.ExcludedPlayerGroupIds
			&& Lhs.PlayerGroupIds == Rhs.PlayerGroupIds
			&& Lhs.ExcludedAccountTagIds == Rhs.ExcludedAccountTagIds
			&& Lhs.IdProviders == Rhs.IdProviders
			&& Lhs.SearchEmailVerified == Rhs.SearchEmailVerified
			&& Lhs.IdProviderAccountId == Rhs.IdProviderAccountId
			&& Lhs.PragmaSocialId == Rhs.PragmaSocialId
			&& Lhs.EmailAddress == Rhs.EmailAddress
			&& Lhs.IdProviderDisplayNameSearch == Rhs.IdProviderDisplayNameSearch
			&& Lhs.PragmaFullDisplayName == Rhs.PragmaFullDisplayName
			&& Lhs.GameShardId == Rhs.GameShardId
;
}
bool operator!=(const FPragma_Account_PlayerSearchFilter& Lhs, const FPragma_Account_PlayerSearchFilter& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_GetPragmaAccountOverviewsPartnerV1Request& Lhs, const FPragma_Account_GetPragmaAccountOverviewsPartnerV1Request& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.Filter == Rhs.Filter
			&& Lhs.PageIndex == Rhs.PageIndex
			&& Lhs.PageSize == Rhs.PageSize
;
}
bool operator!=(const FPragma_Account_GetPragmaAccountOverviewsPartnerV1Request& Lhs, const FPragma_Account_GetPragmaAccountOverviewsPartnerV1Request& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_IdProviderAccount& Lhs, const FPragma_Account_IdProviderAccount& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.IdProviderType == Rhs.IdProviderType
			&& Lhs.AccountId == Rhs.AccountId
			&& Lhs.ProviderDisplayName == Rhs.ProviderDisplayName
;
}
bool operator!=(const FPragma_Account_IdProviderAccount& Lhs, const FPragma_Account_IdProviderAccount& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_GameIdentity& Lhs, const FPragma_Account_GameIdentity& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.GameShardId == Rhs.GameShardId
			&& Lhs.PragmaPlayerId == Rhs.PragmaPlayerId
;
}
bool operator!=(const FPragma_Account_GameIdentity& Lhs, const FPragma_Account_GameIdentity& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_GetAccountV1Response& Lhs, const FPragma_Account_GetAccountV1Response& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.PragmaSocialId == Rhs.PragmaSocialId
			&& Lhs.EmailAddress == Rhs.EmailAddress
			&& Lhs.EmailVerified == Rhs.EmailVerified
			&& Lhs.AccountCreatedTimestampMillis == Rhs.AccountCreatedTimestampMillis
			&& Lhs.LastLoginTimestampMillis == Rhs.LastLoginTimestampMillis
			&& Lhs.DisplayName == Rhs.DisplayName
			&& Lhs.LastDisplayNameUpdateTimestampMillis == Rhs.LastDisplayNameUpdateTimestampMillis
			&& Lhs.GameIdentities == Rhs.GameIdentities
			&& Lhs.IdProviderAccounts == Rhs.IdProviderAccounts
;
}
bool operator!=(const FPragma_Account_GetAccountV1Response& Lhs, const FPragma_Account_GetAccountV1Response& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_AccountTag& Lhs, const FPragma_Account_AccountTag& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.TagId == Rhs.TagId
			&& Lhs.Tag == Rhs.Tag
;
}
bool operator!=(const FPragma_Account_AccountTag& Lhs, const FPragma_Account_AccountTag& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_AccountTagsBySocialId& Lhs, const FPragma_Account_AccountTagsBySocialId& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.PragmaSocialId == Rhs.PragmaSocialId
			&& Lhs.AccountTags == Rhs.AccountTags
;
}
bool operator!=(const FPragma_Account_AccountTagsBySocialId& Lhs, const FPragma_Account_AccountTagsBySocialId& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_RemoveAccountTagsPartnerV1Response& Lhs, const FPragma_Account_RemoveAccountTagsPartnerV1Response& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.AccountTagsBySocialId == Rhs.AccountTagsBySocialId
;
}
bool operator!=(const FPragma_Account_RemoveAccountTagsPartnerV1Response& Lhs, const FPragma_Account_RemoveAccountTagsPartnerV1Response& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_AddAccountTagsPartnerV1Response& Lhs, const FPragma_Account_AddAccountTagsPartnerV1Response& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.AccountTagsBySocialId == Rhs.AccountTagsBySocialId
;
}
bool operator!=(const FPragma_Account_AddAccountTagsPartnerV1Response& Lhs, const FPragma_Account_AddAccountTagsPartnerV1Response& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_GetAccountTagsPartnerV1Response& Lhs, const FPragma_Account_GetAccountTagsPartnerV1Response& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.AccountTagsBySocialId == Rhs.AccountTagsBySocialId
;
}
bool operator!=(const FPragma_Account_GetAccountTagsPartnerV1Response& Lhs, const FPragma_Account_GetAccountTagsPartnerV1Response& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_ViewTagsPartnerV1Response& Lhs, const FPragma_Account_ViewTagsPartnerV1Response& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.AccountTags == Rhs.AccountTags
;
}
bool operator!=(const FPragma_Account_ViewTagsPartnerV1Response& Lhs, const FPragma_Account_ViewTagsPartnerV1Response& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_ViewSocialIdentityPartnerV2Request& Lhs, const FPragma_Account_ViewSocialIdentityPartnerV2Request& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.PragmaSocialId == Rhs.PragmaSocialId
;
}
bool operator!=(const FPragma_Account_ViewSocialIdentityPartnerV2Request& Lhs, const FPragma_Account_ViewSocialIdentityPartnerV2Request& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_ProviderAccountId& Lhs, const FPragma_Account_ProviderAccountId& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.IdProviderType == Rhs.IdProviderType
			&& Lhs.ProviderAccountId == Rhs.ProviderAccountId
;
}
bool operator!=(const FPragma_Account_ProviderAccountId& Lhs, const FPragma_Account_ProviderAccountId& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_GetPragmaPlayerIdsForProviderIdsV2Request& Lhs, const FPragma_Account_GetPragmaPlayerIdsForProviderIdsV2Request& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.GameShardId == Rhs.GameShardId
			&& Lhs.ProviderAccountIds == Rhs.ProviderAccountIds
;
}
bool operator!=(const FPragma_Account_GetPragmaPlayerIdsForProviderIdsV2Request& Lhs, const FPragma_Account_GetPragmaPlayerIdsForProviderIdsV2Request& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_SocialIdentity& Lhs, const FPragma_Account_SocialIdentity& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.PragmaSocialId == Rhs.PragmaSocialId
			&& Lhs.PragmaDisplayName == Rhs.PragmaDisplayName
			&& Lhs.GameIdentities == Rhs.GameIdentities
			&& Lhs.IdProviderAccounts == Rhs.IdProviderAccounts
;
}
bool operator!=(const FPragma_Account_SocialIdentity& Lhs, const FPragma_Account_SocialIdentity& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_SocialIdentityWithPersonal& Lhs, const FPragma_Account_SocialIdentityWithPersonal& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.SocialIdentity == Rhs.SocialIdentity
			&& Lhs.PragmaPersonalId == Rhs.PragmaPersonalId
			&& Lhs.Tags == Rhs.Tags
			&& Lhs.EmailAddress == Rhs.EmailAddress
			&& Lhs.EmailVerified == Rhs.EmailVerified
			&& Lhs.CreatedTimestampMillis == Rhs.CreatedTimestampMillis
			&& Lhs.LastLoginTimestampMillis == Rhs.LastLoginTimestampMillis
;
}
bool operator!=(const FPragma_Account_SocialIdentityWithPersonal& Lhs, const FPragma_Account_SocialIdentityWithPersonal& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_ViewSocialIdentityPartnerV2Response& Lhs, const FPragma_Account_ViewSocialIdentityPartnerV2Response& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.SocialIdentity == Rhs.SocialIdentity
;
}
bool operator!=(const FPragma_Account_ViewSocialIdentityPartnerV2Response& Lhs, const FPragma_Account_ViewSocialIdentityPartnerV2Response& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_GetSocialIdentitiesPartnerV1Response& Lhs, const FPragma_Account_GetSocialIdentitiesPartnerV1Response& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.SocialIdentities == Rhs.SocialIdentities
			&& Lhs.Failures == Rhs.Failures
;
}
bool operator!=(const FPragma_Account_GetSocialIdentitiesPartnerV1Response& Lhs, const FPragma_Account_GetSocialIdentitiesPartnerV1Response& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_GetSocialIdentitiesPartnerV1Request& Lhs, const FPragma_Account_GetSocialIdentitiesPartnerV1Request& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.SocialIds == Rhs.SocialIds
;
}
bool operator!=(const FPragma_Account_GetSocialIdentitiesPartnerV1Request& Lhs, const FPragma_Account_GetSocialIdentitiesPartnerV1Request& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_PlayerIdentity& Lhs, const FPragma_Account_PlayerIdentity& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.PragmaPlayerId == Rhs.PragmaPlayerId
			&& Lhs.PragmaDisplayName == Rhs.PragmaDisplayName
			&& Lhs.IdProviderAccounts == Rhs.IdProviderAccounts
			&& Lhs.PragmaSocialId == Rhs.PragmaSocialId
;
}
bool operator!=(const FPragma_Account_PlayerIdentity& Lhs, const FPragma_Account_PlayerIdentity& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_GetPragmaPlayerIdsForProviderIdsV2Response& Lhs, const FPragma_Account_GetPragmaPlayerIdsForProviderIdsV2Response& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.PlayerIdentities == Rhs.PlayerIdentities
;
}
bool operator!=(const FPragma_Account_GetPragmaPlayerIdsForProviderIdsV2Response& Lhs, const FPragma_Account_GetPragmaPlayerIdsForProviderIdsV2Response& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_GetPlayerIdentitiesPartnerV1Response& Lhs, const FPragma_Account_GetPlayerIdentitiesPartnerV1Response& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.PlayerIdentities == Rhs.PlayerIdentities
			&& Lhs.Failures == Rhs.Failures
;
}
bool operator!=(const FPragma_Account_GetPlayerIdentitiesPartnerV1Response& Lhs, const FPragma_Account_GetPlayerIdentitiesPartnerV1Response& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_GetPlayerIdentitiesPartnerV1Request& Lhs, const FPragma_Account_GetPlayerIdentitiesPartnerV1Request& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.PlayerIds == Rhs.PlayerIds
			&& Lhs.GameShardId == Rhs.GameShardId
;
}
bool operator!=(const FPragma_Account_GetPlayerIdentitiesPartnerV1Request& Lhs, const FPragma_Account_GetPlayerIdentitiesPartnerV1Request& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_DeleteAccountPartnerV1Response& Lhs, const FPragma_Account_DeleteAccountPartnerV1Response& Rhs)
{
	return true // Initial true allows simpler codegen.
;
}
bool operator!=(const FPragma_Account_DeleteAccountPartnerV1Response& Lhs, const FPragma_Account_DeleteAccountPartnerV1Response& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_DeleteAccountPartnerV1Request& Lhs, const FPragma_Account_DeleteAccountPartnerV1Request& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.PragmaSocialId == Rhs.PragmaSocialId
;
}
bool operator!=(const FPragma_Account_DeleteAccountPartnerV1Request& Lhs, const FPragma_Account_DeleteAccountPartnerV1Request& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_GetDisplayNameForPragmaPlayerIdV1Response& Lhs, const FPragma_Account_GetDisplayNameForPragmaPlayerIdV1Response& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.DisplayName == Rhs.DisplayName
			&& Lhs.Discriminator == Rhs.Discriminator
;
}
bool operator!=(const FPragma_Account_GetDisplayNameForPragmaPlayerIdV1Response& Lhs, const FPragma_Account_GetDisplayNameForPragmaPlayerIdV1Response& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_GetDisplayNameForPragmaPlayerIdV1Request& Lhs, const FPragma_Account_GetDisplayNameForPragmaPlayerIdV1Request& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.PragmaPlayerId == Rhs.PragmaPlayerId
			&& Lhs.GameShardId == Rhs.GameShardId
;
}
bool operator!=(const FPragma_Account_GetDisplayNameForPragmaPlayerIdV1Request& Lhs, const FPragma_Account_GetDisplayNameForPragmaPlayerIdV1Request& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_GetPragmaPlayerIdForDisplayNameV1Response& Lhs, const FPragma_Account_GetPragmaPlayerIdForDisplayNameV1Response& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.PragmaPlayerId == Rhs.PragmaPlayerId
;
}
bool operator!=(const FPragma_Account_GetPragmaPlayerIdForDisplayNameV1Response& Lhs, const FPragma_Account_GetPragmaPlayerIdForDisplayNameV1Response& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_GetPragmaPlayerIdForDisplayNameV1Request& Lhs, const FPragma_Account_GetPragmaPlayerIdForDisplayNameV1Request& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.DisplayName == Rhs.DisplayName
			&& Lhs.Discriminator == Rhs.Discriminator
			&& Lhs.GameShardId == Rhs.GameShardId
;
}
bool operator!=(const FPragma_Account_GetPragmaPlayerIdForDisplayNameV1Request& Lhs, const FPragma_Account_GetPragmaPlayerIdForDisplayNameV1Request& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_GetDisplayNameForPlayerIdPartnerV2Response& Lhs, const FPragma_Account_GetDisplayNameForPlayerIdPartnerV2Response& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.DisplayName == Rhs.DisplayName
;
}
bool operator!=(const FPragma_Account_GetDisplayNameForPlayerIdPartnerV2Response& Lhs, const FPragma_Account_GetDisplayNameForPlayerIdPartnerV2Response& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_GetDisplayNameForPlayerIdPartnerV2Request& Lhs, const FPragma_Account_GetDisplayNameForPlayerIdPartnerV2Request& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.PlayerId == Rhs.PlayerId
			&& Lhs.GameShardId == Rhs.GameShardId
;
}
bool operator!=(const FPragma_Account_GetDisplayNameForPlayerIdPartnerV2Request& Lhs, const FPragma_Account_GetDisplayNameForPlayerIdPartnerV2Request& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_UnlinkIdentityProviderAccountPartnerV1Response& Lhs, const FPragma_Account_UnlinkIdentityProviderAccountPartnerV1Response& Rhs)
{
	return true // Initial true allows simpler codegen.
;
}
bool operator!=(const FPragma_Account_UnlinkIdentityProviderAccountPartnerV1Response& Lhs, const FPragma_Account_UnlinkIdentityProviderAccountPartnerV1Response& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_UnlinkIdentityProviderAccountPartnerV1Request& Lhs, const FPragma_Account_UnlinkIdentityProviderAccountPartnerV1Request& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.PragmaSocialId == Rhs.PragmaSocialId
			&& Lhs.IdProvider == Rhs.IdProvider
;
}
bool operator!=(const FPragma_Account_UnlinkIdentityProviderAccountPartnerV1Request& Lhs, const FPragma_Account_UnlinkIdentityProviderAccountPartnerV1Request& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_LinkIdentityProviderAccountV2Response& Lhs, const FPragma_Account_LinkIdentityProviderAccountV2Response& Rhs)
{
	return true // Initial true allows simpler codegen.
;
}
bool operator!=(const FPragma_Account_LinkIdentityProviderAccountV2Response& Lhs, const FPragma_Account_LinkIdentityProviderAccountV2Response& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_IdProviderRequest& Lhs, const FPragma_Account_IdProviderRequest& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.ProviderId == Rhs.ProviderId
			&& Lhs.ProviderToken == Rhs.ProviderToken
;
}
bool operator!=(const FPragma_Account_IdProviderRequest& Lhs, const FPragma_Account_IdProviderRequest& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_LinkIdentityProviderAccountV2Request& Lhs, const FPragma_Account_LinkIdentityProviderAccountV2Request& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.NewProvider == Rhs.NewProvider
;
}
bool operator!=(const FPragma_Account_LinkIdentityProviderAccountV2Request& Lhs, const FPragma_Account_LinkIdentityProviderAccountV2Request& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_FederateRequest& Lhs, const FPragma_Account_FederateRequest& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.GameShardId == Rhs.GameShardId
			&& Lhs.ExistingProvider == Rhs.ExistingProvider
			&& Lhs.NewProvider == Rhs.NewProvider
;
}
bool operator!=(const FPragma_Account_FederateRequest& Lhs, const FPragma_Account_FederateRequest& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_LinkIdentityProviderAccountPartnerV1Request& Lhs, const FPragma_Account_LinkIdentityProviderAccountPartnerV1Request& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.Request == Rhs.Request
;
}
bool operator!=(const FPragma_Account_LinkIdentityProviderAccountPartnerV1Request& Lhs, const FPragma_Account_LinkIdentityProviderAccountPartnerV1Request& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_PragmaTokens& Lhs, const FPragma_Account_PragmaTokens& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.PragmaGameToken == Rhs.PragmaGameToken
			&& Lhs.PragmaSocialToken == Rhs.PragmaSocialToken
;
}
bool operator!=(const FPragma_Account_PragmaTokens& Lhs, const FPragma_Account_PragmaTokens& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_LinkIdentityProviderAccountPartnerV1Response& Lhs, const FPragma_Account_LinkIdentityProviderAccountPartnerV1Response& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.Tokens == Rhs.Tokens
;
}
bool operator!=(const FPragma_Account_LinkIdentityProviderAccountPartnerV1Response& Lhs, const FPragma_Account_LinkIdentityProviderAccountPartnerV1Response& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_RefreshTokensV1Response& Lhs, const FPragma_Account_RefreshTokensV1Response& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.PragmaTokens == Rhs.PragmaTokens
;
}
bool operator!=(const FPragma_Account_RefreshTokensV1Response& Lhs, const FPragma_Account_RefreshTokensV1Response& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Account_RefreshTokensV1Request& Lhs, const FPragma_Account_RefreshTokensV1Request& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.PragmaTokens == Rhs.PragmaTokens
;
}
bool operator!=(const FPragma_Account_RefreshTokensV1Request& Lhs, const FPragma_Account_RefreshTokensV1Request& Rhs)
{
	return !(Lhs == Rhs);
}
