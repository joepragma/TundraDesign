// <auto-generated>
//      Generated by Pragma Platform protoc-custom-plugins sdk-unreal4 target.  DO NOT EDIT!
//      Source template: unreal4/Dto.cpp.mustache
// </auto-generated>

#include "PragmaGameManagementCommonDto.h"
#include "CoreMinimal.h"
#include "PragmaJson.h"



bool operator==(const FPragma_GameManagement_LimitedAccessEventDetails& Lhs, const FPragma_GameManagement_LimitedAccessEventDetails& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.GameShardId == Rhs.GameShardId
			&& Lhs.Name == Rhs.Name
			&& Lhs.Description == Rhs.Description
			&& Lhs.PlayerGroupIds == Rhs.PlayerGroupIds
			&& Lhs.StartUnixTimeMs == Rhs.StartUnixTimeMs
			&& Lhs.EndUnixTimeMs == Rhs.EndUnixTimeMs
			&& Lhs.TimeZone == Rhs.TimeZone
;
}
bool operator!=(const FPragma_GameManagement_LimitedAccessEventDetails& Lhs, const FPragma_GameManagement_LimitedAccessEventDetails& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_GameManagement_LimitedAccessEvent& Lhs, const FPragma_GameManagement_LimitedAccessEvent& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.LimitedAccessEventId == Rhs.LimitedAccessEventId
			&& Lhs.LimitedAccessEventDetails == Rhs.LimitedAccessEventDetails
;
}
bool operator!=(const FPragma_GameManagement_LimitedAccessEvent& Lhs, const FPragma_GameManagement_LimitedAccessEvent& Rhs)
{
	return !(Lhs == Rhs);
}
