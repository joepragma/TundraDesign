// <auto-generated>
//      Generated by Pragma Platform protoc-custom-plugins sdk-unreal4 target.  DO NOT EDIT!
//      Source template: unreal4/Dto.cpp.mustache
// </auto-generated>

#include "PragmaGameInstanceRpcDto.h"
#include "CoreMinimal.h"
#include "PragmaJson.h"



bool operator==(const FPragma_GameInstance_GameEndedV1Notification& Lhs, const FPragma_GameInstance_GameEndedV1Notification& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.GameInstanceId == Rhs.GameInstanceId
			&& Lhs.Ext == Rhs.Ext
;
}
bool operator!=(const FPragma_GameInstance_GameEndedV1Notification& Lhs, const FPragma_GameInstance_GameEndedV1Notification& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_GameInstance_RemovedFromGameV1Notification& Lhs, const FPragma_GameInstance_RemovedFromGameV1Notification& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.GameInstanceId == Rhs.GameInstanceId
			&& Lhs.Ext == Rhs.Ext
;
}
bool operator!=(const FPragma_GameInstance_RemovedFromGameV1Notification& Lhs, const FPragma_GameInstance_RemovedFromGameV1Notification& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_GameInstance_PlayerDeclinedReconnectV1Notification& Lhs, const FPragma_GameInstance_PlayerDeclinedReconnectV1Notification& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.GameInstanceId == Rhs.GameInstanceId
			&& Lhs.PlayerId == Rhs.PlayerId
;
}
bool operator!=(const FPragma_GameInstance_PlayerDeclinedReconnectV1Notification& Lhs, const FPragma_GameInstance_PlayerDeclinedReconnectV1Notification& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_GameInstance_GameInstanceLeftMatchmakingV1Notification& Lhs, const FPragma_GameInstance_GameInstanceLeftMatchmakingV1Notification& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.GameInstanceId == Rhs.GameInstanceId
;
}
bool operator!=(const FPragma_GameInstance_GameInstanceLeftMatchmakingV1Notification& Lhs, const FPragma_GameInstance_GameInstanceLeftMatchmakingV1Notification& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_GameInstance_GameInstanceEnteredMatchmakingV1Notification& Lhs, const FPragma_GameInstance_GameInstanceEnteredMatchmakingV1Notification& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.GameInstanceId == Rhs.GameInstanceId
;
}
bool operator!=(const FPragma_GameInstance_GameInstanceEnteredMatchmakingV1Notification& Lhs, const FPragma_GameInstance_GameInstanceEnteredMatchmakingV1Notification& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_GameInstance_GameServerPlayer& Lhs, const FPragma_GameInstance_GameServerPlayer& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.PlayerId == Rhs.PlayerId
			&& Lhs.SocialId == Rhs.SocialId
			&& Lhs.DisplayName == Rhs.DisplayName
			&& Lhs.PartyId == Rhs.PartyId
			&& Lhs.TeamNumber == Rhs.TeamNumber
			&& Lhs.ClientVersion == Rhs.ClientVersion
			&& Lhs.Ext == Rhs.Ext
;
}
bool operator!=(const FPragma_GameInstance_GameServerPlayer& Lhs, const FPragma_GameInstance_GameServerPlayer& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_GameInstance_AddPlayersV1Notification& Lhs, const FPragma_GameInstance_AddPlayersV1Notification& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.GameInstanceId == Rhs.GameInstanceId
			&& Lhs.GameServerPlayers == Rhs.GameServerPlayers
;
}
bool operator!=(const FPragma_GameInstance_AddPlayersV1Notification& Lhs, const FPragma_GameInstance_AddPlayersV1Notification& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_GameInstance_GameInstanceTerminationV1Notification& Lhs, const FPragma_GameInstance_GameInstanceTerminationV1Notification& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.GameInstanceId == Rhs.GameInstanceId
			&& Lhs.Reason == Rhs.Reason
;
}
bool operator!=(const FPragma_GameInstance_GameInstanceTerminationV1Notification& Lhs, const FPragma_GameInstance_GameInstanceTerminationV1Notification& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_GameInstance_GameInstanceStartFailureV1Notification& Lhs, const FPragma_GameInstance_GameInstanceStartFailureV1Notification& Rhs)
{
	return true // Initial true allows simpler codegen.
;
}
bool operator!=(const FPragma_GameInstance_GameInstanceStartFailureV1Notification& Lhs, const FPragma_GameInstance_GameInstanceStartFailureV1Notification& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_GameInstance_AddedToGameV1Notification& Lhs, const FPragma_GameInstance_AddedToGameV1Notification& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.GameInstanceId == Rhs.GameInstanceId
			&& Lhs.Ext == Rhs.Ext
;
}
bool operator!=(const FPragma_GameInstance_AddedToGameV1Notification& Lhs, const FPragma_GameInstance_AddedToGameV1Notification& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_GameInstance_VerifyPlayerPartnerV1Response& Lhs, const FPragma_GameInstance_VerifyPlayerPartnerV1Response& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.IsValid == Rhs.IsValid
;
}
bool operator!=(const FPragma_GameInstance_VerifyPlayerPartnerV1Response& Lhs, const FPragma_GameInstance_VerifyPlayerPartnerV1Response& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_GameInstance_VerifyPlayerPartnerV1Request& Lhs, const FPragma_GameInstance_VerifyPlayerPartnerV1Request& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.GameInstanceId == Rhs.GameInstanceId
			&& Lhs.PlayerId == Rhs.PlayerId
			&& Lhs.ConnectionToken == Rhs.ConnectionToken
;
}
bool operator!=(const FPragma_GameInstance_VerifyPlayerPartnerV1Request& Lhs, const FPragma_GameInstance_VerifyPlayerPartnerV1Request& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_GameInstance_HostConnectionDetails& Lhs, const FPragma_GameInstance_HostConnectionDetails& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.GameInstanceId == Rhs.GameInstanceId
			&& Lhs.ExtConnectionDetails == Rhs.ExtConnectionDetails
			&& Lhs.Hostname == Rhs.Hostname
			&& Lhs.Port == Rhs.Port
			&& Lhs.ConnectionToken == Rhs.ConnectionToken
;
}
bool operator!=(const FPragma_GameInstance_HostConnectionDetails& Lhs, const FPragma_GameInstance_HostConnectionDetails& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_GameInstance_GameInstanceReconnectV1Notification& Lhs, const FPragma_GameInstance_GameInstanceReconnectV1Notification& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.HostConnectionDetails == Rhs.HostConnectionDetails
;
}
bool operator!=(const FPragma_GameInstance_GameInstanceReconnectV1Notification& Lhs, const FPragma_GameInstance_GameInstanceReconnectV1Notification& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_GameInstance_HostConnectionDetailsV1Notification& Lhs, const FPragma_GameInstance_HostConnectionDetailsV1Notification& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.ConnectionDetails == Rhs.ConnectionDetails
;
}
bool operator!=(const FPragma_GameInstance_HostConnectionDetailsV1Notification& Lhs, const FPragma_GameInstance_HostConnectionDetailsV1Notification& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_GameInstance_GetHostConnectionDetailsV1Response& Lhs, const FPragma_GameInstance_GetHostConnectionDetailsV1Response& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.HostConnectionDetails == Rhs.HostConnectionDetails
;
}
bool operator!=(const FPragma_GameInstance_GetHostConnectionDetailsV1Response& Lhs, const FPragma_GameInstance_GetHostConnectionDetailsV1Response& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_GameInstance_GetHostConnectionDetailsV1Request& Lhs, const FPragma_GameInstance_GetHostConnectionDetailsV1Request& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.GameInstanceId == Rhs.GameInstanceId
;
}
bool operator!=(const FPragma_GameInstance_GetHostConnectionDetailsV1Request& Lhs, const FPragma_GameInstance_GetHostConnectionDetailsV1Request& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_GameInstance_DeclineReconnectV1Response& Lhs, const FPragma_GameInstance_DeclineReconnectV1Response& Rhs)
{
	return true // Initial true allows simpler codegen.
;
}
bool operator!=(const FPragma_GameInstance_DeclineReconnectV1Response& Lhs, const FPragma_GameInstance_DeclineReconnectV1Response& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_GameInstance_DeclineReconnectV1Request& Lhs, const FPragma_GameInstance_DeclineReconnectV1Request& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.GameInstanceId == Rhs.GameInstanceId
;
}
bool operator!=(const FPragma_GameInstance_DeclineReconnectV1Request& Lhs, const FPragma_GameInstance_DeclineReconnectV1Request& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_GameInstance_EndGameV1Response& Lhs, const FPragma_GameInstance_EndGameV1Response& Rhs)
{
	return true // Initial true allows simpler codegen.
;
}
bool operator!=(const FPragma_GameInstance_EndGameV1Response& Lhs, const FPragma_GameInstance_EndGameV1Response& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_GameInstance_EndGameV1Request& Lhs, const FPragma_GameInstance_EndGameV1Request& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.GameInstanceId == Rhs.GameInstanceId
			&& Lhs.PlayerGameResults == Rhs.PlayerGameResults
			&& Lhs.Ext == Rhs.Ext
;
}
bool operator!=(const FPragma_GameInstance_EndGameV1Request& Lhs, const FPragma_GameInstance_EndGameV1Request& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_GameInstance_RemovePlayersV1Response& Lhs, const FPragma_GameInstance_RemovePlayersV1Response& Rhs)
{
	return true // Initial true allows simpler codegen.
;
}
bool operator!=(const FPragma_GameInstance_RemovePlayersV1Response& Lhs, const FPragma_GameInstance_RemovePlayersV1Response& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_GameInstance_RemovePlayersV1Request& Lhs, const FPragma_GameInstance_RemovePlayersV1Request& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.GameInstanceId == Rhs.GameInstanceId
			&& Lhs.Players == Rhs.Players
			&& Lhs.Ext == Rhs.Ext
;
}
bool operator!=(const FPragma_GameInstance_RemovePlayersV1Request& Lhs, const FPragma_GameInstance_RemovePlayersV1Request& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_GameInstance_LeaveMatchmakingV1Response& Lhs, const FPragma_GameInstance_LeaveMatchmakingV1Response& Rhs)
{
	return true // Initial true allows simpler codegen.
;
}
bool operator!=(const FPragma_GameInstance_LeaveMatchmakingV1Response& Lhs, const FPragma_GameInstance_LeaveMatchmakingV1Response& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_GameInstance_LeaveMatchmakingV1Request& Lhs, const FPragma_GameInstance_LeaveMatchmakingV1Request& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.GameInstanceId == Rhs.GameInstanceId
;
}
bool operator!=(const FPragma_GameInstance_LeaveMatchmakingV1Request& Lhs, const FPragma_GameInstance_LeaveMatchmakingV1Request& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_GameInstance_EnterMatchmakingV1Response& Lhs, const FPragma_GameInstance_EnterMatchmakingV1Response& Rhs)
{
	return true // Initial true allows simpler codegen.
;
}
bool operator!=(const FPragma_GameInstance_EnterMatchmakingV1Response& Lhs, const FPragma_GameInstance_EnterMatchmakingV1Response& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_GameInstance_EnterMatchmakingV1Request& Lhs, const FPragma_GameInstance_EnterMatchmakingV1Request& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.GameInstanceId == Rhs.GameInstanceId
;
}
bool operator!=(const FPragma_GameInstance_EnterMatchmakingV1Request& Lhs, const FPragma_GameInstance_EnterMatchmakingV1Request& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_GameInstance_GameKeepAliveV1Response& Lhs, const FPragma_GameInstance_GameKeepAliveV1Response& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.EnableKeepAlive == Rhs.EnableKeepAlive
			&& Lhs.KeepAliveIntervalMillis == Rhs.KeepAliveIntervalMillis
;
}
bool operator!=(const FPragma_GameInstance_GameKeepAliveV1Response& Lhs, const FPragma_GameInstance_GameKeepAliveV1Response& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_GameInstance_GameKeepAliveV1Request& Lhs, const FPragma_GameInstance_GameKeepAliveV1Request& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.GameInstanceId == Rhs.GameInstanceId
;
}
bool operator!=(const FPragma_GameInstance_GameKeepAliveV1Request& Lhs, const FPragma_GameInstance_GameKeepAliveV1Request& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_GameInstance_ConnectMorePlayersV1Response& Lhs, const FPragma_GameInstance_ConnectMorePlayersV1Response& Rhs)
{
	return true // Initial true allows simpler codegen.
;
}
bool operator!=(const FPragma_GameInstance_ConnectMorePlayersV1Response& Lhs, const FPragma_GameInstance_ConnectMorePlayersV1Response& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_GameInstance_ConnectPlayersV1Response& Lhs, const FPragma_GameInstance_ConnectPlayersV1Response& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.EnableKeepAlive == Rhs.EnableKeepAlive
			&& Lhs.KeepAliveIntervalMillis == Rhs.KeepAliveIntervalMillis
;
}
bool operator!=(const FPragma_GameInstance_ConnectPlayersV1Response& Lhs, const FPragma_GameInstance_ConnectPlayersV1Response& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_GameInstance_PlayerConnectionDetails& Lhs, const FPragma_GameInstance_PlayerConnectionDetails& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.PlayerId == Rhs.PlayerId
			&& Lhs.ExtPlayerConnectionDetails == Rhs.ExtPlayerConnectionDetails
;
}
bool operator!=(const FPragma_GameInstance_PlayerConnectionDetails& Lhs, const FPragma_GameInstance_PlayerConnectionDetails& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_GameInstance_ConnectMorePlayersV1Request& Lhs, const FPragma_GameInstance_ConnectMorePlayersV1Request& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.GameInstanceId == Rhs.GameInstanceId
			&& Lhs.Hostname == Rhs.Hostname
			&& Lhs.Port == Rhs.Port
			&& Lhs.PlayerConnectionDetails == Rhs.PlayerConnectionDetails
;
}
bool operator!=(const FPragma_GameInstance_ConnectMorePlayersV1Request& Lhs, const FPragma_GameInstance_ConnectMorePlayersV1Request& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_GameInstance_ConnectPlayersV1Request& Lhs, const FPragma_GameInstance_ConnectPlayersV1Request& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.GameInstanceId == Rhs.GameInstanceId
			&& Lhs.Hostname == Rhs.Hostname
			&& Lhs.Port == Rhs.Port
			&& Lhs.PlayerConnectionDetails == Rhs.PlayerConnectionDetails
;
}
bool operator!=(const FPragma_GameInstance_ConnectPlayersV1Request& Lhs, const FPragma_GameInstance_ConnectPlayersV1Request& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_GameInstance_UpdateGameInstanceV1Response& Lhs, const FPragma_GameInstance_UpdateGameInstanceV1Response& Rhs)
{
	return true // Initial true allows simpler codegen.
;
}
bool operator!=(const FPragma_GameInstance_UpdateGameInstanceV1Response& Lhs, const FPragma_GameInstance_UpdateGameInstanceV1Response& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_GameInstance_UpdateGameInstanceV1Request& Lhs, const FPragma_GameInstance_UpdateGameInstanceV1Request& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.GameInstanceId == Rhs.GameInstanceId
			&& Lhs.RequestExt == Rhs.RequestExt
;
}
bool operator!=(const FPragma_GameInstance_UpdateGameInstanceV1Request& Lhs, const FPragma_GameInstance_UpdateGameInstanceV1Request& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_GameInstance_GameStart& Lhs, const FPragma_GameInstance_GameStart& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.GameInstanceId == Rhs.GameInstanceId
			&& Lhs.Players == Rhs.Players
			&& Lhs.Ext == Rhs.Ext
;
}
bool operator!=(const FPragma_GameInstance_GameStart& Lhs, const FPragma_GameInstance_GameStart& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_GameInstance_GetGameStartDataV1Response& Lhs, const FPragma_GameInstance_GetGameStartDataV1Response& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.GameStart == Rhs.GameStart
;
}
bool operator!=(const FPragma_GameInstance_GetGameStartDataV1Response& Lhs, const FPragma_GameInstance_GetGameStartDataV1Response& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_GameInstance_GetGameStartDataV1Request& Lhs, const FPragma_GameInstance_GetGameStartDataV1Request& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.GameInstanceId == Rhs.GameInstanceId
;
}
bool operator!=(const FPragma_GameInstance_GetGameStartDataV1Request& Lhs, const FPragma_GameInstance_GetGameStartDataV1Request& Rhs)
{
	return !(Lhs == Rhs);
}
