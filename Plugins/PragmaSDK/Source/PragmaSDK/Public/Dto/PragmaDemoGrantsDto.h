// <auto-generated>
//      Generated by Pragma Platform protoc-custom-plugins sdk-unreal4 target.  DO NOT EDIT!
//      Source template: unreal4/Dto.h.mustache
// </auto-generated>
#pragma once

#include "CoreMinimal.h"
#include "Dom/JsonObject.h"

#include "PragmaDemoGrantsDto.generated.h"

// Forward declarations.
struct FPragma_Ext_DemoStackableItemGrant;
struct FPragma_Ext_DemoInstancedItemGrant;
struct FPragma_Ext_DemoItemGrant;

//
// Source protos:
// shared/demoGrants.proto
//


USTRUCT(BlueprintType, Category=Pragma)
struct FPragma_Ext_DemoStackableItemGrant
{
	GENERATED_BODY()

	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category=Pragma)
	FString CatalogId;

	UPROPERTY()
	int64 Amount{0};

};
PRAGMASDK_API bool operator==(const FPragma_Ext_DemoStackableItemGrant& Lhs, const FPragma_Ext_DemoStackableItemGrant& Rhs);
PRAGMASDK_API bool operator!=(const FPragma_Ext_DemoStackableItemGrant& Lhs, const FPragma_Ext_DemoStackableItemGrant& Rhs);

USTRUCT(BlueprintType, Category=Pragma)
struct FPragma_Ext_DemoInstancedItemGrant
{
	GENERATED_BODY()

	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category=Pragma)
	FString CatalogId;

};
PRAGMASDK_API bool operator==(const FPragma_Ext_DemoInstancedItemGrant& Lhs, const FPragma_Ext_DemoInstancedItemGrant& Rhs);
PRAGMASDK_API bool operator!=(const FPragma_Ext_DemoInstancedItemGrant& Lhs, const FPragma_Ext_DemoInstancedItemGrant& Rhs);

UENUM(BlueprintType, Category=Pragma)
enum class EPragma_Ext_DemoItemGrant_ItemType : uint8
{
	Invalid,
	Instanced,
	Stackable,
};

USTRUCT(BlueprintType, Category=Pragma)
struct PRAGMASDK_API FPragma_Ext_DemoItemGrant_Item
{
	GENERATED_BODY()

	FPragma_Ext_DemoItemGrant_Item();
	~FPragma_Ext_DemoItemGrant_Item();

	FPragma_Ext_DemoItemGrant_Item(const FPragma_Ext_DemoItemGrant_Item& Other);
	FPragma_Ext_DemoItemGrant_Item& operator=(const FPragma_Ext_DemoItemGrant_Item& Other);

    bool Equals(const FPragma_Ext_DemoItemGrant_Item& Other) const;

	void Reset();

	EPragma_Ext_DemoItemGrant_ItemType OneOfType() const { return Type; }

	const FPragma_Ext_DemoInstancedItemGrant& Instanced() const;
	const FPragma_Ext_DemoStackableItemGrant& Stackable() const;

    void SetInstanced(const FPragma_Ext_DemoInstancedItemGrant& Value);
    void SetStackable(const FPragma_Ext_DemoStackableItemGrant& Value);

	static bool SerializeIntoParentJson(const void* Value, TSharedRef<FJsonObject>& OutJsonObj);
	static bool DeserializeFromParentJson(const TSharedRef<FJsonObject>& JsonObj, void* OutValue);

private:
	UPROPERTY()
	EPragma_Ext_DemoItemGrant_ItemType Type { EPragma_Ext_DemoItemGrant_ItemType::Invalid };

	union
	{
		TTypeCompatibleBytes<FPragma_Ext_DemoInstancedItemGrant> Instanced;
		TTypeCompatibleBytes<FPragma_Ext_DemoStackableItemGrant> Stackable;
	} Union{};
};
bool operator==(const FPragma_Ext_DemoItemGrant_Item& Lhs, const FPragma_Ext_DemoItemGrant_Item& Rhs);
bool operator!=(const FPragma_Ext_DemoItemGrant_Item& Lhs, const FPragma_Ext_DemoItemGrant_Item& Rhs);

USTRUCT(BlueprintType, Category=Pragma)
struct FPragma_Ext_DemoItemGrant
{
	GENERATED_BODY()

	UPROPERTY(Transient)
	FPragma_Ext_DemoItemGrant_Item Item;

    PRAGMASDK_API static bool AddonSerializer(const void* Value, TSharedRef<FJsonObject>& OutJsonObj);
    PRAGMASDK_API static bool AddonDeserializer(const TSharedRef<FJsonObject>& JsonObj, void* OutValue);
};
PRAGMASDK_API bool operator==(const FPragma_Ext_DemoItemGrant& Lhs, const FPragma_Ext_DemoItemGrant& Rhs);
PRAGMASDK_API bool operator!=(const FPragma_Ext_DemoItemGrant& Lhs, const FPragma_Ext_DemoItemGrant& Rhs);

