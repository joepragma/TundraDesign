// <auto-generated>
//      Generated by Pragma Platform protoc-custom-plugins sdk-unreal4 target.  DO NOT EDIT!
//      Source template: unreal4/Dto.h.mustache
// </auto-generated>
#pragma once

#include "CoreMinimal.h"
#include "Dom/JsonObject.h"
#include "Dto/PragmaDataRightsCommonDto.h"
#include "Dto/PragmaTypesDto.h"
#include "Dto/PragmaOptionsDto.h"

#include "PragmaPaymentRpcDto.generated.h"

// Forward declarations.
struct FPragma_Payment_AnnotatedProductEntry;
struct FPragma_Payment_GetProductEntriesV1Response;
struct FPragma_Payment_GetProductEntriesV1Request;
struct FPragma_Payment_OrderRecord;

//
// Source protos:
// pragma/payment/paymentRpc.proto
//


//
// Enums.
//

UENUM(BlueprintType, Category=Pragma)
enum class EPragma_Payment_OrderStatus : uint8
{
	UNUSED_STATUS = 0,
	INITIALIZED = 1,
	PAYMENT_PROCESSED = 2,
	ORDER_FULFILLED = 3,
	FAILED = 4,
	REVOCABLE = 5,
	PARTIALLY_REVOCABLE = 6,
};

//
// Messages.
//

//
// Enums.
//

UENUM(BlueprintType, Category=Pragma)
enum class EPragma_Payment_CurrencyCode : uint8
{
	UNUSED_CURRENCY = 0,
	USD = 1,
	EUR = 2,
	CAD = 3,
	AED = 4,
	ARS = 5,
	AUD = 6,
	BRL = 7,
	CHF = 8,
	CLP = 9,
	CNY = 10,
	COP = 11,
	CRC = 12,
	GBP = 13,
	HKD = 14,
	ILS = 15,
	IDR = 16,
	INR = 17,
	JPY = 18,
	KRW = 19,
	KWD = 20,
	KZT = 21,
	MXN = 22,
	MYR = 23,
	NOK = 24,
	NZD = 25,
	PEN = 26,
	PHP = 27,
	PLN = 28,
	QAR = 29,
	RUB = 30,
	SAR = 31,
	SGD = 32,
	THB = 33,
	TRY = 34,
	TWD = 35,
	UAH = 36,
	UYU = 37,
	VND = 38,
	ZAR = 39,
};

//
// Messages.
//

//
// Enums.
//

UENUM(BlueprintType, Category=Pragma)
enum class EPragma_Payment_PaymentProviderId : uint8
{
	UNUSED_PAYMENT_PROVIDER = 0,
	STEAM = 1,
};

//
// Messages.
//

USTRUCT(BlueprintType, Category=Pragma)
struct FPragma_Payment_AnnotatedProductEntry
{
	GENERATED_BODY()

	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category=Pragma)
	FString Id;

	UPROPERTY()
	int64 Price{0};

	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category=Pragma)
	EPragma_Payment_CurrencyCode CurrencyCode{static_cast<EPragma_Payment_CurrencyCode>(0)};

};
PRAGMASDK_API bool operator==(const FPragma_Payment_AnnotatedProductEntry& Lhs, const FPragma_Payment_AnnotatedProductEntry& Rhs);
PRAGMASDK_API bool operator!=(const FPragma_Payment_AnnotatedProductEntry& Lhs, const FPragma_Payment_AnnotatedProductEntry& Rhs);

USTRUCT(BlueprintType, Category=Pragma)
struct FPragma_Payment_GetProductEntriesV1Response
{
	GENERATED_BODY()

	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category=Pragma)
	TArray<FPragma_Payment_AnnotatedProductEntry> ProductEntries;

};
PRAGMASDK_API bool operator==(const FPragma_Payment_GetProductEntriesV1Response& Lhs, const FPragma_Payment_GetProductEntriesV1Response& Rhs);
PRAGMASDK_API bool operator!=(const FPragma_Payment_GetProductEntriesV1Response& Lhs, const FPragma_Payment_GetProductEntriesV1Response& Rhs);

USTRUCT(BlueprintType, Category=Pragma)
struct FPragma_Payment_GetProductEntriesV1Request
{
	GENERATED_BODY()

};
PRAGMASDK_API bool operator==(const FPragma_Payment_GetProductEntriesV1Request& Lhs, const FPragma_Payment_GetProductEntriesV1Request& Rhs);
PRAGMASDK_API bool operator!=(const FPragma_Payment_GetProductEntriesV1Request& Lhs, const FPragma_Payment_GetProductEntriesV1Request& Rhs);

USTRUCT(BlueprintType, Category=Pragma)
struct FPragma_Payment_OrderRecord
{
	GENERATED_BODY()

	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category=Pragma)
	FString PragmaSocialId;

	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category=Pragma)
	FString OrderId;

	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category=Pragma)
	FString GameShardId;

	UPROPERTY()
	int64 CreatedTimestampMillis{0};

	UPROPERTY()
	int64 LastUpdateTimestampMillis{0};

	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category=Pragma)
	EPragma_Payment_OrderStatus OrderStatus{static_cast<EPragma_Payment_OrderStatus>(0)};

	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category=Pragma)
	FString ItemBundleId;

	UPROPERTY()
	int64 OrderPrice{0};

	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category=Pragma)
	EPragma_Payment_CurrencyCode CurrencyCode{static_cast<EPragma_Payment_CurrencyCode>(0)};

	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category=Pragma)
	EPragma_Payment_PaymentProviderId PaymentProviderId{static_cast<EPragma_Payment_PaymentProviderId>(0)};

};
PRAGMASDK_API bool operator==(const FPragma_Payment_OrderRecord& Lhs, const FPragma_Payment_OrderRecord& Rhs);
PRAGMASDK_API bool operator!=(const FPragma_Payment_OrderRecord& Lhs, const FPragma_Payment_OrderRecord& Rhs);

