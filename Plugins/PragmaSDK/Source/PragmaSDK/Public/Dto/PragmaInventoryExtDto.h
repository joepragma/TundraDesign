// <auto-generated>
//      Generated by Pragma Platform protoc-custom-plugins sdk-unreal4 target.  DO NOT EDIT!
//      Source template: unreal4/Dto.h.mustache
// </auto-generated>
#pragma once

#include "CoreMinimal.h"
#include "Dom/JsonObject.h"
#include "Dto/PragmaTypesDto.h"
#include "Dto/PragmaOptionsDto.h"
#include "Dto/PragmaMissionsDto.h"
#include "Dto/PragmaPetDto.h"

#include "PragmaInventoryExtDto.generated.h"

// Forward declarations.
struct FPragma_Inventory_PetEvolutionRequest;
struct FPragma_Inventory_TrackingItem;
struct FPragma_Inventory_Gear;
struct FPragma_Inventory_IncompleteFood;
struct FPragma_Inventory_ExtInstancedItem;

//
// Source protos:
// shared/inventoryExt.proto
//


USTRUCT(BlueprintType, Category=Pragma)
struct FPragma_Inventory_PetEvolutionRequest
{
	GENERATED_BODY()

	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category=Pragma)
	FString CraftingLocation;

};
PRAGMASDK_API bool operator==(const FPragma_Inventory_PetEvolutionRequest& Lhs, const FPragma_Inventory_PetEvolutionRequest& Rhs);
PRAGMASDK_API bool operator!=(const FPragma_Inventory_PetEvolutionRequest& Lhs, const FPragma_Inventory_PetEvolutionRequest& Rhs);

USTRUCT(BlueprintType, Category=Pragma)
struct FPragma_Inventory_TrackingItem
{
	GENERATED_BODY()

	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category=Pragma)
	TArray<FString> InstanceIds;

};
PRAGMASDK_API bool operator==(const FPragma_Inventory_TrackingItem& Lhs, const FPragma_Inventory_TrackingItem& Rhs);
PRAGMASDK_API bool operator!=(const FPragma_Inventory_TrackingItem& Lhs, const FPragma_Inventory_TrackingItem& Rhs);

USTRUCT(BlueprintType, Category=Pragma)
struct FPragma_Inventory_Gear
{
	GENERATED_BODY()

	UPROPERTY()
	int64 Xp{0};

	UPROPERTY()
	int64 BonusMultiplier{0};

};
PRAGMASDK_API bool operator==(const FPragma_Inventory_Gear& Lhs, const FPragma_Inventory_Gear& Rhs);
PRAGMASDK_API bool operator!=(const FPragma_Inventory_Gear& Lhs, const FPragma_Inventory_Gear& Rhs);

USTRUCT(BlueprintType, Category=Pragma)
struct FPragma_Inventory_IncompleteFood
{
	GENERATED_BODY()

	UPROPERTY()
	int64 TimestampMillis{0};

};
PRAGMASDK_API bool operator==(const FPragma_Inventory_IncompleteFood& Lhs, const FPragma_Inventory_IncompleteFood& Rhs);
PRAGMASDK_API bool operator!=(const FPragma_Inventory_IncompleteFood& Lhs, const FPragma_Inventory_IncompleteFood& Rhs);

UENUM(BlueprintType, Category=Pragma)
enum class EPragma_Inventory_ExtInstancedItem_DataType : uint8
{
	Invalid,
	Pet,
	IncompleteFood,
	ActiveMissions,
	Gear,
	TrackingItem,
};

USTRUCT(BlueprintType, Category=Pragma)
struct PRAGMASDK_API FPragma_Inventory_ExtInstancedItem_Data
{
	GENERATED_BODY()

	FPragma_Inventory_ExtInstancedItem_Data();
	~FPragma_Inventory_ExtInstancedItem_Data();

	FPragma_Inventory_ExtInstancedItem_Data(const FPragma_Inventory_ExtInstancedItem_Data& Other);
	FPragma_Inventory_ExtInstancedItem_Data& operator=(const FPragma_Inventory_ExtInstancedItem_Data& Other);

    bool Equals(const FPragma_Inventory_ExtInstancedItem_Data& Other) const;

	void Reset();

	EPragma_Inventory_ExtInstancedItem_DataType OneOfType() const { return Type; }

	const FPragma_Inventory_Pet& Pet() const;
	const FPragma_Inventory_IncompleteFood& IncompleteFood() const;
	const FPragma_Ext_ActiveMissions& ActiveMissions() const;
	const FPragma_Inventory_Gear& Gear() const;
	const FPragma_Inventory_TrackingItem& TrackingItem() const;

    void SetPet(const FPragma_Inventory_Pet& Value);
    void SetIncompleteFood(const FPragma_Inventory_IncompleteFood& Value);
    void SetActiveMissions(const FPragma_Ext_ActiveMissions& Value);
    void SetGear(const FPragma_Inventory_Gear& Value);
    void SetTrackingItem(const FPragma_Inventory_TrackingItem& Value);

	static bool SerializeIntoParentJson(const void* Value, TSharedRef<FJsonObject>& OutJsonObj);
	static bool DeserializeFromParentJson(const TSharedRef<FJsonObject>& JsonObj, void* OutValue);

private:
	UPROPERTY()
	EPragma_Inventory_ExtInstancedItem_DataType Type { EPragma_Inventory_ExtInstancedItem_DataType::Invalid };

	union
	{
		TTypeCompatibleBytes<FPragma_Inventory_Pet> Pet;
		TTypeCompatibleBytes<FPragma_Inventory_IncompleteFood> IncompleteFood;
		TTypeCompatibleBytes<FPragma_Ext_ActiveMissions> ActiveMissions;
		TTypeCompatibleBytes<FPragma_Inventory_Gear> Gear;
		TTypeCompatibleBytes<FPragma_Inventory_TrackingItem> TrackingItem;
	} Union{};
};
bool operator==(const FPragma_Inventory_ExtInstancedItem_Data& Lhs, const FPragma_Inventory_ExtInstancedItem_Data& Rhs);
bool operator!=(const FPragma_Inventory_ExtInstancedItem_Data& Lhs, const FPragma_Inventory_ExtInstancedItem_Data& Rhs);

USTRUCT(BlueprintType, Category=Pragma)
struct FPragma_Inventory_ExtInstancedItem
{
	GENERATED_BODY()

	UPROPERTY(Transient)
	FPragma_Inventory_ExtInstancedItem_Data Data;

    PRAGMASDK_API static bool AddonSerializer(const void* Value, TSharedRef<FJsonObject>& OutJsonObj);
    PRAGMASDK_API static bool AddonDeserializer(const TSharedRef<FJsonObject>& JsonObj, void* OutValue);
};
PRAGMASDK_API bool operator==(const FPragma_Inventory_ExtInstancedItem& Lhs, const FPragma_Inventory_ExtInstancedItem& Rhs);
PRAGMASDK_API bool operator!=(const FPragma_Inventory_ExtInstancedItem& Lhs, const FPragma_Inventory_ExtInstancedItem& Rhs);

