// <auto-generated>
//      Generated by Pragma Platform protoc-custom-plugins sdk-unreal4 target.  DO NOT EDIT!
//      Source template: unreal4/Dto.h.mustache
// </auto-generated>
#pragma once

#include "CoreMinimal.h"
#include "Dom/JsonObject.h"
#include "Dto/PragmaTypesDto.h"
#include "Dto/PragmaOptionsDto.h"

#include "PragmaGameManagementCommonDto.generated.h"

// Forward declarations.
struct FPragma_GameManagement_LimitedAccessEventDetails;
struct FPragma_GameManagement_LimitedAccessEvent;

//
// Source protos:
// pragma/gamemanagement/gameManagementCommon.proto
//


USTRUCT(BlueprintType, Category=Pragma)
struct FPragma_GameManagement_LimitedAccessEventDetails
{
	GENERATED_BODY()

	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category=Pragma)
	FString GameShardId;

	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category=Pragma)
	FString Name;

	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category=Pragma)
	FString Description;

	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category=Pragma)
	TArray<FString> PlayerGroupIds;

	UPROPERTY()
	int64 StartUnixTimeMs{0};

	UPROPERTY()
	int64 EndUnixTimeMs{0};

	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category=Pragma)
	FString TimeZone;

};
PRAGMASDK_API bool operator==(const FPragma_GameManagement_LimitedAccessEventDetails& Lhs, const FPragma_GameManagement_LimitedAccessEventDetails& Rhs);
PRAGMASDK_API bool operator!=(const FPragma_GameManagement_LimitedAccessEventDetails& Lhs, const FPragma_GameManagement_LimitedAccessEventDetails& Rhs);

USTRUCT(BlueprintType, Category=Pragma)
struct FPragma_GameManagement_LimitedAccessEvent
{
	GENERATED_BODY()

	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category=Pragma)
	FString LimitedAccessEventId;

	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category=Pragma)
	FPragma_GameManagement_LimitedAccessEventDetails LimitedAccessEventDetails;

};
PRAGMASDK_API bool operator==(const FPragma_GameManagement_LimitedAccessEvent& Lhs, const FPragma_GameManagement_LimitedAccessEvent& Rhs);
PRAGMASDK_API bool operator!=(const FPragma_GameManagement_LimitedAccessEvent& Lhs, const FPragma_GameManagement_LimitedAccessEvent& Rhs);

