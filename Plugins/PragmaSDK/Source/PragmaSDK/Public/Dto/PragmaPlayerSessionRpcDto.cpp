// <auto-generated>
//      Generated by Pragma Platform protoc-custom-plugins sdk-unreal4 target.  DO NOT EDIT!
//      Source template: unreal4/Dto.cpp.mustache
// </auto-generated>

#include "PragmaPlayerSessionRpcDto.h"
#include "CoreMinimal.h"
#include "PragmaJson.h"



bool operator==(const FPragma_Session_SessionRefreshV1Response& Lhs, const FPragma_Session_SessionRefreshV1Response& Rhs)
{
	return true // Initial true allows simpler codegen.
;
}
bool operator!=(const FPragma_Session_SessionRefreshV1Response& Lhs, const FPragma_Session_SessionRefreshV1Response& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Session_SessionRefreshV1Request& Lhs, const FPragma_Session_SessionRefreshV1Request& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.Token == Rhs.Token
;
}
bool operator!=(const FPragma_Session_SessionRefreshV1Request& Lhs, const FPragma_Session_SessionRefreshV1Request& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Session_HeartbeatV1Response& Lhs, const FPragma_Session_HeartbeatV1Response& Rhs)
{
	return true // Initial true allows simpler codegen.
;
}
bool operator!=(const FPragma_Session_HeartbeatV1Response& Lhs, const FPragma_Session_HeartbeatV1Response& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Session_HeartbeatV1Request& Lhs, const FPragma_Session_HeartbeatV1Request& Rhs)
{
	return true // Initial true allows simpler codegen.
;
}
bool operator!=(const FPragma_Session_HeartbeatV1Request& Lhs, const FPragma_Session_HeartbeatV1Request& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Session_RequestLogoutV1Response& Lhs, const FPragma_Session_RequestLogoutV1Response& Rhs)
{
	return true // Initial true allows simpler codegen.
;
}
bool operator!=(const FPragma_Session_RequestLogoutV1Response& Lhs, const FPragma_Session_RequestLogoutV1Response& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Session_RequestLogoutV1Request& Lhs, const FPragma_Session_RequestLogoutV1Request& Rhs)
{
	return true // Initial true allows simpler codegen.
;
}
bool operator!=(const FPragma_Session_RequestLogoutV1Request& Lhs, const FPragma_Session_RequestLogoutV1Request& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Session_SessionTerminatedV1Notification& Lhs, const FPragma_Session_SessionTerminatedV1Notification& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.PlayerSession == Rhs.PlayerSession
			&& Lhs.Reason == Rhs.Reason
;
}
bool operator!=(const FPragma_Session_SessionTerminatedV1Notification& Lhs, const FPragma_Session_SessionTerminatedV1Notification& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_Session_SessionChangedV1Notification& Lhs, const FPragma_Session_SessionChangedV1Notification& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.NewVersion == Rhs.NewVersion
			&& Lhs.AttributesSet.OrderIndependentCompareEqual(Rhs.AttributesSet)
			&& Lhs.AttributesRemoved == Rhs.AttributesRemoved
;
}
bool operator!=(const FPragma_Session_SessionChangedV1Notification& Lhs, const FPragma_Session_SessionChangedV1Notification& Rhs)
{
	return !(Lhs == Rhs);
}
