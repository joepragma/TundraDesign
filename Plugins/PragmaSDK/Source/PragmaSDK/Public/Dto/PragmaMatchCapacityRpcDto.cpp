// <auto-generated>
//      Generated by Pragma Platform protoc-custom-plugins sdk-unreal4 target.  DO NOT EDIT!
//      Source template: unreal4/Dto.cpp.mustache
// </auto-generated>

#include "PragmaMatchCapacityRpcDto.h"
#include "CoreMinimal.h"
#include "PragmaJson.h"



bool operator==(const FPragma_MatchCapacity_ReportCapacityV2Response& Lhs, const FPragma_MatchCapacity_ReportCapacityV2Response& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.NextHeartbeatPeriodMillis == Rhs.NextHeartbeatPeriodMillis
			&& Lhs.GameInstanceIds == Rhs.GameInstanceIds
;
}
bool operator!=(const FPragma_MatchCapacity_ReportCapacityV2Response& Lhs, const FPragma_MatchCapacity_ReportCapacityV2Response& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_MatchCapacity_ReportCapacityV2Request& Lhs, const FPragma_MatchCapacity_ReportCapacityV2Request& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.ServerId == Rhs.ServerId
			&& Lhs.TotalCapacity == Rhs.TotalCapacity
			&& Lhs.UsedCapacity == Rhs.UsedCapacity
			&& Lhs.GameVersion == Rhs.GameVersion
			&& Lhs.GameServerZone == Rhs.GameServerZone
;
}
bool operator!=(const FPragma_MatchCapacity_ReportCapacityV2Request& Lhs, const FPragma_MatchCapacity_ReportCapacityV2Request& Rhs)
{
	return !(Lhs == Rhs);
}
