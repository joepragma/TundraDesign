// <auto-generated>
//      Generated by Pragma Platform protoc-custom-plugins sdk-unreal4 target.  DO NOT EDIT!
//      Source template: unreal4/Dto.h.mustache
// </auto-generated>
#pragma once

#include "CoreMinimal.h"
#include "Dom/JsonObject.h"
#include "Dto/PragmaGameManagementCommonDto.h"
#include "Dto/PragmaTypesDto.h"
#include "Dto/PragmaOptionsDto.h"

#include "PragmaGameManagementRpcDto.generated.h"

// Forward declarations.
struct FPragma_GameManagement_GetAllLimitedAccessEventsPartnerV1Response;
struct FPragma_GameManagement_GetAllLimitedAccessEventsPartnerV1Request;

//
// Source protos:
// pragma/gamemanagement/gameManagementRpc.proto
//


USTRUCT(BlueprintType, Category=Pragma)
struct FPragma_GameManagement_GetAllLimitedAccessEventsPartnerV1Response
{
	GENERATED_BODY()

	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category=Pragma)
	TArray<FPragma_GameManagement_LimitedAccessEvent> LimitedAccessEvent;

};
PRAGMASDK_API bool operator==(const FPragma_GameManagement_GetAllLimitedAccessEventsPartnerV1Response& Lhs, const FPragma_GameManagement_GetAllLimitedAccessEventsPartnerV1Response& Rhs);
PRAGMASDK_API bool operator!=(const FPragma_GameManagement_GetAllLimitedAccessEventsPartnerV1Response& Lhs, const FPragma_GameManagement_GetAllLimitedAccessEventsPartnerV1Response& Rhs);

USTRUCT(BlueprintType, Category=Pragma)
struct FPragma_GameManagement_GetAllLimitedAccessEventsPartnerV1Request
{
	GENERATED_BODY()

	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category=Pragma)
	FString GameShardId;

};
PRAGMASDK_API bool operator==(const FPragma_GameManagement_GetAllLimitedAccessEventsPartnerV1Request& Lhs, const FPragma_GameManagement_GetAllLimitedAccessEventsPartnerV1Request& Rhs);
PRAGMASDK_API bool operator!=(const FPragma_GameManagement_GetAllLimitedAccessEventsPartnerV1Request& Lhs, const FPragma_GameManagement_GetAllLimitedAccessEventsPartnerV1Request& Rhs);

