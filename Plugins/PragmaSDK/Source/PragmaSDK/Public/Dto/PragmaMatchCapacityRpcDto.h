// <auto-generated>
//      Generated by Pragma Platform protoc-custom-plugins sdk-unreal4 target.  DO NOT EDIT!
//      Source template: unreal4/Dto.h.mustache
// </auto-generated>
#pragma once

#include "CoreMinimal.h"
#include "Dom/JsonObject.h"
#include "Dto/PragmaTypesDto.h"
#include "Dto/PragmaOptionsDto.h"

#include "PragmaMatchCapacityRpcDto.generated.h"

// Forward declarations.
struct FPragma_MatchCapacity_ReportCapacityV2Response;
struct FPragma_MatchCapacity_ReportCapacityV2Request;

//
// Source protos:
// pragma/matchcapacity/matchCapacityRpc.proto
//


USTRUCT(BlueprintType, Category=Pragma)
struct FPragma_MatchCapacity_ReportCapacityV2Response
{
	GENERATED_BODY()

	UPROPERTY()
	int64 NextHeartbeatPeriodMillis{0};

	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category=Pragma)
	TArray<FString> GameInstanceIds;

};
PRAGMASDK_API bool operator==(const FPragma_MatchCapacity_ReportCapacityV2Response& Lhs, const FPragma_MatchCapacity_ReportCapacityV2Response& Rhs);
PRAGMASDK_API bool operator!=(const FPragma_MatchCapacity_ReportCapacityV2Response& Lhs, const FPragma_MatchCapacity_ReportCapacityV2Response& Rhs);

USTRUCT(BlueprintType, Category=Pragma)
struct FPragma_MatchCapacity_ReportCapacityV2Request
{
	GENERATED_BODY()

	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category=Pragma)
	FString ServerId;

	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category=Pragma)
	int32 TotalCapacity{0};

	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category=Pragma)
	int32 UsedCapacity{0};

	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category=Pragma)
	FString GameVersion;

	UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category=Pragma)
	FString GameServerZone;

};
PRAGMASDK_API bool operator==(const FPragma_MatchCapacity_ReportCapacityV2Request& Lhs, const FPragma_MatchCapacity_ReportCapacityV2Request& Rhs);
PRAGMASDK_API bool operator!=(const FPragma_MatchCapacity_ReportCapacityV2Request& Lhs, const FPragma_MatchCapacity_ReportCapacityV2Request& Rhs);

