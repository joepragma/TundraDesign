// <auto-generated>
//      Generated by Pragma Platform protoc-custom-plugins sdk-unreal4 target.  DO NOT EDIT!
//      Source template: unreal4/Dto.cpp.mustache
// </auto-generated>

#include "PragmaGameDataRpcDto.h"
#include "CoreMinimal.h"
#include "PragmaJson.h"



bool operator==(const FPragma_GameData_InventoryContent& Lhs, const FPragma_GameData_InventoryContent& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.ItemCatalog == Rhs.ItemCatalog
			&& Lhs.Stores == Rhs.Stores
			&& Lhs.UpdateEntries == Rhs.UpdateEntries
			&& Lhs.CraftingEntries == Rhs.CraftingEntries
			&& Lhs.ItemBundles == Rhs.ItemBundles
			&& Lhs.ProviderEntitlements == Rhs.ProviderEntitlements
;
}
bool operator!=(const FPragma_GameData_InventoryContent& Lhs, const FPragma_GameData_InventoryContent& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_GameData_InventoryLoginData& Lhs, const FPragma_GameData_InventoryLoginData& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.IssuedLimitedGrantTrackingIds == Rhs.IssuedLimitedGrantTrackingIds
			&& Lhs.InventoryContent == Rhs.InventoryContent
;
}
bool operator!=(const FPragma_GameData_InventoryLoginData& Lhs, const FPragma_GameData_InventoryLoginData& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_GameData_LoginDataV3& Lhs, const FPragma_GameData_LoginDataV3& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.Ext == Rhs.Ext
			&& Lhs.InventoryData == Rhs.InventoryData
;
}
bool operator!=(const FPragma_GameData_LoginDataV3& Lhs, const FPragma_GameData_LoginDataV3& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_GameData_GetLoginDataV3Response& Lhs, const FPragma_GameData_GetLoginDataV3Response& Rhs)
{
	return true // Initial true allows simpler codegen.
			&& Lhs.LoginData == Rhs.LoginData
;
}
bool operator!=(const FPragma_GameData_GetLoginDataV3Response& Lhs, const FPragma_GameData_GetLoginDataV3Response& Rhs)
{
	return !(Lhs == Rhs);
}


bool operator==(const FPragma_GameData_GetLoginDataV3Request& Lhs, const FPragma_GameData_GetLoginDataV3Request& Rhs)
{
	return true // Initial true allows simpler codegen.
;
}
bool operator!=(const FPragma_GameData_GetLoginDataV3Request& Lhs, const FPragma_GameData_GetLoginDataV3Request& Rhs)
{
	return !(Lhs == Rhs);
}
